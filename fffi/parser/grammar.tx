Fortran:
  statements*=Statement
;

Statement: 
  Declaration
;

// R501
Declaration:
   dtype=DeclarationType ((',' attributs*=DeclarationAttribut[','])? DEF)? entities*=DeclarationEntity[',']
;

// R502
DeclarationType:
      kind=IntrinsicType 
    | kind='TYPE'  //(DerivedType)? // TODO
    | kind='CLASS' //(DerivedType | STAR)? // TODO
;

// R503
DeclarationAttribut:
      key='ALLOCATABLE'
    | key='ASYNCHRONOUS'
//    | 'BIND'( C [ , NAME= scalar-character-initialization-expression ] )
    | key='DIMENSION' '(' value=ArraySpec ')'
    | key='EXTERNAL'
//    | 'INTENT' ( intent-spec )
    | key='INTRINSIC'
    | key='OPTIONAL'
    | key='PARAMETER'
    | key='POINTER'
    | key='PRIVATE'
    | key='PROTECTED'
    | key='PUBLIC'
    | key='SAVE'
    | key='TARGET'
    | key='VALUE'
    | key='VOLATILE'
;

// R504
DeclarationEntity: DeclarationEntityObject | DeclarationEntityFunction;

// R504
DeclarationEntityObject:
    name=ID // TODO add the remaining attributs
;

// R504
DeclarationEntityFunction:
    name=ID (STAR charlen=INT)?
;

// R510
ArraySpec:
      value*=ArrayExplicitShapeSpec[','] 
//    | value*=ArrayAssumedShapeSpec[','] 
//    | value*=ArrayDeferredShapeSpec[','] 
//    | value=ArrayAssumedSizeSpec
;

// R514
ArrayExplicitShapeSpec:
    (':' lower_bound=INT|ID)? upper_bound=INT|ID
;


IntrinsicType:
      'INTEGER' 
    | 'REAL' 
    | 'COMPLEX' 
    | 'DOUBLE PRECISION' // TODO allowing for white spaces 
    | 'DOUBLE COMPLEX' // TODO allowing for white spaces 
    | 'LOGICAL' 
    | 'CHARACTER' 
;

DEF:         "::";
COMMA:       ",";
STAR:       "*";
